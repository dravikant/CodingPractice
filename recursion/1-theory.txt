/*

each time make a decision 

like

1. add the element
2. skip the element

this will reduce the input 

create recusrsive tree


base condition -> hypothesis -> induction

base condition -> smallest/largest valid/invalid input 


print(n) -> prints no from 1 to N

print(n){
    if(n==0){
        return ;
    }
    print(n-1) -> prints number from 1 to n-1
    print("n")
}

choice diagram


reverse a link list
return the next node via recursion so as to invert its net pointer
/* Function to reverse the linked list */
    Node* reverse(Node* node)
    {
        if (node == NULL)
            return NULL;
        if (node->next == NULL) {
            head = node;
            return node;
        }
        Node* node1 = reverse(node->next);
        node1->next = node;
        node->next = NULL;
        return node;
    }

*/